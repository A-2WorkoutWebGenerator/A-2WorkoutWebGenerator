CREATE TABLE users (
    id NUMBER PRIMARY KEY,
    username VARCHAR2(50) NOT NULL UNIQUE,
    email VARCHAR2(100) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE SEQUENCE users_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER users_trigger
BEFORE INSERT ON users
FOR EACH ROW
BEGIN
    IF :NEW.id IS NULL THEN
        SELECT users_seq.NEXTVAL INTO :NEW.id FROM dual;
    END IF;
END;

CREATE TABLE auth_tokens (
    id NUMBER PRIMARY KEY,
    user_id NUMBER NOT NULL,
    token VARCHAR2(255) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    expires_at TIMESTAMP NOT NULL,
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE SEQUENCE auth_tokens_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER auth_tokens_trigger
BEFORE INSERT ON auth_tokens
FOR EACH ROW
BEGIN
    IF :NEW.id IS NULL THEN
        SELECT auth_tokens_seq.NEXTVAL INTO :NEW.id FROM dual;
    END IF;
END;
